<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>tapestry-resteasy-swagger</artifactId>
	<name>Tapestry RESTEasy</name>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<description>Swagger + UI for tapestry-resteasy</description>

	<parent>
		<groupId>org.tynamo</groupId>
		<artifactId>tynamo-parent</artifactId>
		<version>0.3.1</version>
	</parent>

	<scm>
		<connection>scm:git:git@github.com:tynamo/tapestry-resteasy-swagger.git</connection>
		<developerConnection>scm:git:git@github.com:tynamo/tapestry-resteasy-swagger.git</developerConnection>
		<url>https://github.com/tynamo/tapestry-resteasy</url>
	  <tag>HEAD</tag>
  </scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Tapestry-Module-Classes>org.tynamo.resteasy.swagger.ResteasySwaggerModule</Tapestry-Module-Classes>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<useTestClasspath>true</useTestClasspath>
					<webAppConfig>
						<contextPath>/</contextPath>
						<resourceBases>
							<resourceBase>${basedir}/src/test/webapp</resourceBase>
						</resourceBases>
					</webAppConfig>

					<systemProperties>
						<systemProperty>
							<name>tapestry.execution-mode</name>
							<value>development</value>
						</systemProperty>
						<systemProperty>
							<name>tapestry.production-mode</name>
							<value>false</value>
						</systemProperty>
					</systemProperties>

				</configuration>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tapestry-resteasy</artifactId>
			<version>0.6.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.tynamo</groupId>
			<artifactId>tynamo-test</artifactId>
			<version>0.2.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.2</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
			<version>2.1.2</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>2.1.2</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>1.6.1</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.24</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.24</version>
		</dependency>

<!-- 
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.24</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.24</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>2.0.0-rc2</version>
		</dependency>
		
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>2.0.0-rc2</version>
		</dependency>
 -->		

		<!--  We could just use the webjar as is for the ui, but then we'd need to to parse/store the version
		somewhere to point to the path, because it's stored in webjar, e.g. /webjars/swagger-ui/3.25.0/index.html.
		For now, simply extracted the contents to src/main/resources/swagger/ui and added a classpathassetalias
		"swagger-ui" -> "swagger/ui"
		   -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<version>3.25.0</version>
		</dependency>
	</dependencies>

</project>
